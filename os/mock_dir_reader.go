// Automatically generated by MockGen. DO NOT EDIT!
// Source: dir_reader.go

package os

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of DirReader interface
type MockDirReader struct {
	ctrl     *gomock.Controller
	recorder *_MockDirReaderRecorder
}

// Recorder for MockDirReader (not exported)
type _MockDirReaderRecorder struct {
	mock *MockDirReader
}

func NewMockDirReader(ctrl *gomock.Controller) *MockDirReader {
	mock := &MockDirReader{ctrl: ctrl}
	mock.recorder = &_MockDirReaderRecorder{mock}
	return mock
}

func (_m *MockDirReader) EXPECT() *_MockDirReaderRecorder {
	return _m.recorder
}

func (_m *MockDirReader) Read() ([]string, error) {
	ret := _m.ctrl.Call(_m, "Read")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDirReaderRecorder) Read() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Read")
}

func (_m *MockDirReader) Filter(_param0 DirEntryFilter) ([]string, error) {
	ret := _m.ctrl.Call(_m, "Filter", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDirReaderRecorder) Filter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Filter", arg0)
}
